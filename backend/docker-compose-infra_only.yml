version: '3'
services:
  # Zookeeper 서비스 설정
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest  # 최신 버전의 Confluent Zookeeper 이미지 사용
    ports:
      - '32181:32181'  # Zookeeper의 클라이언트 포트
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181  # Zookeeper의 기본 클라이언트 포트
      ZOOKEEPER_TICK_TIME: 2000  # Zookeeper의 틱 타임 설정, 기본값 2000ms

  # Kafka 브로커 설정
  kafka-1:
    image: confluentinc/cp-kafka:latest  # 최신 버전의 Confluent Kafka 이미지 사용
    container_name: kafka-msa  # Kafka 컨테이너 이름 지정
    ports:
      - '9092:9092'  # 외부에서 Kafka에 접근할 수 있는 포트
    depends_on:
      - zookeeper-1  # Zookeeper가 먼저 실행되어야 Kafka가 시작됨
    environment:
      KAFKA_BROKER_ID: 1  # Kafka 브로커 ID 설정 (각 브로커는 고유의 ID를 가져야 함)
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:32181  # Zookeeper 연결 정보
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT  # 리스너 보안 프로토콜 설정
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL  # 브로커 간 내부 통신 리스너 이름 설정
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:29092,EXTERNAL://localhost:9092  # Kafka의 리스너 주소와 포트 설정
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # 오프셋 토픽의 복제 인수 설정
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0  # 소비자 그룹 재조정 지연 시간 (밀리초) 설정
      # KAFKA_DEFAULT_REPLICATION_FACTOR: 3  # 토픽의 기본 복제 인수 설정 (주석 처리됨)
      KAFKA_NUM_PARTITIONS: 4  # 토픽 생성 시 기본 파티션 수 설정

  # Kafka UI 설정
  kafka-ui:
    image: provectuslabs/kafka-ui  # Kafka UI 도구 이미지
    container_name: kafka-ui  # Kafka UI 컨테이너 이름 지정
    ports:
      - "8989:8080"  # 외부에서 Kafka UI에 접근할 수 있는 포트
    restart: always  # 컨테이너가 종료될 경우 자동 재시작
    environment:
      - KAFKA_CLUSTERS_0_NAME=local  # Kafka 클러스터 이름 설정
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:29092  # Kafka 클러스터의 부트스트랩 서버 주소 설정
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper-1:32181  # Kafka 클러스터의 Zookeeper 주소 설정
